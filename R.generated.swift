//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 3 images.
  struct image {
    /// Image `tab_bar_home_icon`.
    static let tab_bar_home_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "tab_bar_home_icon")
    /// Image `tab_bar_my_page_icon`.
    static let tab_bar_my_page_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "tab_bar_my_page_icon")
    /// Image `tab_bar_search_icon`.
    static let tab_bar_search_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "tab_bar_search_icon")
    
    /// `UIImage(named: "tab_bar_home_icon", bundle: ..., traitCollection: ...)`
    static func tab_bar_home_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tab_bar_home_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tab_bar_my_page_icon", bundle: ..., traitCollection: ...)`
    static func tab_bar_my_page_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tab_bar_my_page_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tab_bar_search_icon", bundle: ..., traitCollection: ...)`
    static func tab_bar_search_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tab_bar_search_icon, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 0 storyboards.
  struct storyboard {
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    /// This `R.string.localized` struct is generated, and contains static references to 4 localization keys.
    struct localized {
      /// en translation: main
      /// 
      /// Locales: en, ja
      static let nav_title_main = Rswift.StringResource(key: "nav_title_main", tableName: "Localized", bundle: R.hostingBundle, locales: ["en", "ja"], comment: nil)
      /// en translation: main
      /// 
      /// Locales: en, ja
      static let tab_title_main = Rswift.StringResource(key: "tab_title_main", tableName: "Localized", bundle: R.hostingBundle, locales: ["en", "ja"], comment: nil)
      /// en translation: sub
      /// 
      /// Locales: en, ja
      static let nav_title_sub = Rswift.StringResource(key: "nav_title_sub", tableName: "Localized", bundle: R.hostingBundle, locales: ["en", "ja"], comment: nil)
      /// en translation: sub
      /// 
      /// Locales: en, ja
      static let tab_title_sub = Rswift.StringResource(key: "tab_title_sub", tableName: "Localized", bundle: R.hostingBundle, locales: ["en", "ja"], comment: nil)
      
      /// en translation: main
      /// 
      /// Locales: en, ja
      static func nav_title_main(_: Void = ()) -> String {
        return NSLocalizedString("nav_title_main", tableName: "Localized", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: main
      /// 
      /// Locales: en, ja
      static func tab_title_main(_: Void = ()) -> String {
        return NSLocalizedString("tab_title_main", tableName: "Localized", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: sub
      /// 
      /// Locales: en, ja
      static func nav_title_sub(_: Void = ()) -> String {
        return NSLocalizedString("nav_title_sub", tableName: "Localized", bundle: R.hostingBundle, comment: "")
      }
      
      /// en translation: sub
      /// 
      /// Locales: en, ja
      static func tab_title_sub(_: Void = ()) -> String {
        return NSLocalizedString("tab_title_sub", tableName: "Localized", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard {
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
